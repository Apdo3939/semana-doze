{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\celke\\\\semana-doze\\\\frontend\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport socketIOClient from 'socket.io-client';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet socket;\n\nfunction App() {\n  _s();\n\n  const URL_BACKEND = \"http://localhost:8081/\";\n  const [logado, setLogado] = useState(false);\n  const [nome, setNome] = useState(\"\");\n  const [sala, setSala] = useState(\"\");\n  const [mensagem, setMensagem] = useState(\"\");\n  const [listaMensagem, setListaMensagem] = useState([]);\n\n  const conectarSala = () => {\n    setLogado(true);\n    socket.emit(\"sala_conectar\", sala);\n  };\n\n  const enviarMensagem = async () => {\n    console.log(\"Mensagem enviada \" + mensagem);\n    const conteudoMensagem = {\n      sala,\n      conteudo: {\n        nome,\n        mensagem\n      }\n    };\n    await socket.emit(\"enviar_mensagem\", conteudoMensagem);\n    setListaMensagem([...listaMensagem, conteudoMensagem.conteudo]);\n    setMensagem(\"\");\n  };\n\n  useEffect(() => {\n    socket = socketIOClient(URL_BACKEND);\n  }, []);\n  useEffect(() => {\n    socket.on(\"receber_mensagem\", data => {\n      setListaMensagem([...listaMensagem, data]);\n    });\n  }, [listaMensagem]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: !logado ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Nome: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Nome\",\n          name: \"nome\",\n          value: nome,\n          onChange: text => {\n            setNome(text.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Sala: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"sala\",\n          value: sala,\n          onChange: text => {\n            setSala(text.target.value);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Selecione\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"1\",\n            children: \"Node.js\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"2\",\n            children: \"React\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"3\",\n            children: \"React Native\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"4\",\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: conectarSala,\n          children: \"Conectar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [listaMensagem.map((msg, key) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [msg.nome, \": \", msg.mensagem]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"mensagem\",\n        placeholder: \"Mensagem...\",\n        value: mensagem,\n        onChange: text => {\n          setMensagem(text.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: enviarMensagem,\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"M4XS1pkbnn+tc2gBq5aP6IHooTA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/React/celke/semana-doze/frontend/src/App.js"],"names":["useEffect","useState","socketIOClient","socket","App","URL_BACKEND","logado","setLogado","nome","setNome","sala","setSala","mensagem","setMensagem","listaMensagem","setListaMensagem","conectarSala","emit","enviarMensagem","console","log","conteudoMensagem","conteudo","on","data","text","target","value","map","msg","key"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\nimport socketIOClient from 'socket.io-client';\nimport './App.css';\n\nlet socket;\n\nfunction App() {\n\n  const URL_BACKEND = \"http://localhost:8081/\";\n\n  const [logado, setLogado] = useState(false);\n  const [nome, setNome] = useState(\"\");\n  const [sala, setSala] = useState(\"\");\n  const [mensagem, setMensagem] = useState(\"\");\n  const [listaMensagem, setListaMensagem] = useState([]);\n\n  const conectarSala = () => {\n    setLogado(true);\n    socket.emit(\"sala_conectar\", sala);\n  }\n\n  const enviarMensagem = async () => {\n    console.log(\"Mensagem enviada \" + mensagem);\n    const conteudoMensagem = {\n      sala,\n      conteudo: {\n        nome,\n        mensagem\n      }\n    }\n    await socket.emit(\"enviar_mensagem\", conteudoMensagem);\n    setListaMensagem([...listaMensagem, conteudoMensagem.conteudo]);\n    setMensagem(\"\");\n  }\n\n\n  useEffect(() => {\n    socket = socketIOClient(URL_BACKEND);\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"receber_mensagem\", (data) => {\n      setListaMensagem([...listaMensagem, data]);\n    })\n  }, [listaMensagem]);\n\n  return (\n    <div className=\"App\">\n      {!logado ?\n        <>\n          <div>\n            <label>Nome: </label>\n            <input type=\"text\" placeholder=\"Nome\" name=\"nome\" value={nome} onChange={(text) => { setNome(text.target.value) }} />\n          </div>\n          <div>\n            <label>Sala: </label>\n            <select name=\"sala\" value={sala} onChange={(text) => { setSala(text.target.value) }} >\n              <option value=\"\">Selecione</option>\n              <option value=\"1\">Node.js</option>\n              <option value=\"2\">React</option>\n              <option value=\"3\">React Native</option>\n              <option value=\"4\">Next</option>\n            </select>\n          </div>\n          <div>\n            <button onClick={conectarSala}>Conectar</button>\n          </div>\n        </>\n        :\n        <>\n          {listaMensagem.map((msg, key) => {\n            return (\n              <div key={key}>\n                {msg.nome}: {msg.mensagem}\n              </div>\n            )\n          })}\n          <input type=\"text\" name=\"mensagem\" placeholder=\"Mensagem...\" value={mensagem} onChange={(text) => { setMensagem(text.target.value) }} />\n\n          <button onClick={enviarMensagem}>Enviar</button>\n        </>\n      }\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}